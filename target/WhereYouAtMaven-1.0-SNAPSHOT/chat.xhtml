<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:p="http://primefaces.org/ui">

    <f:view contentType="text/html">
        <h:head>
            <script type="text/javascript" src="http://www.parsecdn.com/js/parse-1.3.3.min.js"></script>
            <script type="text/javascript" src="JS/fbActions.js"></script>
            <script type="text/javascript" src="JS/nodeChat.js"></script>
            <h:outputScript library="primefaces" name="jquery/jquery.js" />
            <f:facet name="first">
                <meta content='text/html; charset=UTF-8' http-equiv="Content-Type"/>
                <title>PrimeFaces</title>
            </f:facet>
            
        </h:head>
            <f:metadata>
                <f:viewParam id="receiver" name="receiver" value="#{messageBean.receiver}"/>
            </f:metadata>
            <f:event listener="#{userBean.checkLogin}" type="preRenderView" />
        <h:body>
            

            <p:layout fullPage="true">

                <p:layoutUnit position="north" size="100" resizable="true" closable="true" collapsible="true">
                    WhereYouAt
                    <p>#{userBean.userModel.firstname}</p>
                </p:layoutUnit>

                <p:layoutUnit position="south" size="100" closable="true" collapsible="true">
                    <input type="hidden" maxlength="128" name="from" id="from" value="#{userBean.userModel.email}"/><br/>
                    <input type="hidden" maxlength="128" name="to" id="to"  value="#{messageBean.receiver}"/>
                    
                    <input type="button" style="float: right" value="submit" onclick="doSend(document.getElementById('from').value,document.getElementById('to').value,document.getElementById('value').value)" />
                    <div style="overflow: hidden; padding-right: .5em;">
                        <input type="text" style="width: 100%;" name="value" id='value' value="Your message here" /><br/>
                    </div>
                    
                    
                </p:layoutUnit>

                    <p:layoutUnit position="west" size="175" header="Menu" collapsible="true">
                        <h:form>
                        <p:menu>
                            <p:menuitem value="Main" action="welcomePrimefaces" />
                            <p:menuitem value="Chat" action="findChat" />
                            <p:menuitem value="Logout" onclick="App.logOut()" />

                        </p:menu>
                        </h:form>
                    </p:layoutUnit>

                <p:layoutUnit position="center">
                    #{userBean.userModel.email} -> #{messageBean.receiver}
                    <h:form id="receiveOld">
                        <h:inputHidden id="sender" value="#{userBean.userModel.email}" />
                        <h:inputHidden id="receiver" value="#{messageBean.receiver}" />
                        <h:inputHidden id="limit" value="#{messageBean.limit}" />
                        
                        <!-- <h:commandButton action="#{messageBean.fetchMessages()}" value="Fetch old msgs"/> -->
                    </h:form>
                    <a href="#" onclick="fetchOldMessages()" >Fetch old</a>
                    <h2>WebSocket Test NODE</h2>
                    
                    <div id="parentOut">
                        <p id="output"></p>
                    </div>
                    
                    <div id="oldoutput"></div>
                    
                </p:layoutUnit>

            </p:layout>

        </h:body>

    </f:view>
        <script type="text/javascript">
            //<![CDATA[
             
             
            // Initialize Parse with Parse app_id and javascript_key
            Parse.initialize("wMNwNpfj87bX3Dia3mDqXiczJkmay2q9xNN7Fa6s", "GiJ5WaiGX9VIR8GDnqE2B0x8vCN4qvPkta30Tmrb");

            var fetched = 0;
            var latestMessage = null;

            function checkUser(){
            Parse.initialize("wMNwNpfj87bX3Dia3mDqXiczJkmay2q9xNN7Fa6s", "GiJ5WaiGX9VIR8GDnqE2B0x8vCN4qvPkta30Tmrb");
            console.log("CHECKING USER");
            
            var query = new Parse.Query(Parse.User);
            var email = document.getElementById("receiveOld:receiver").value;
            
            console.log("Email: " + email);
            
            query.equalTo("email", email);
            query.find({
              success: function(results) {
                // Do something with the returned Parse.Object values
                console.log("RESULTS: " + results);
                if(results.length > 0){
                  var object = results[0];
                  console.log(object.get('firstname') + " " + object.get('lastname'));
                  post("chat.xhtml",{receiver: object.get('email')});
                }else{
                  console.log("No User Found");
                }
              },
              error: function(error) {
                console.log("Error: " + error);
              }
            });
          }
          
          function fetchOldMessages(){
            console.log("FETCHING OLD MESSAGES");
            
            var GameScore = Parse.Object.extend("Messages");
            var query = new Parse.Query(GameScore);
            
            var GameScore2 = Parse.Object.extend("Messages");
            var query2 = new Parse.Query(GameScore2);
            
            query.equalTo("sender", document.getElementById("receiveOld:sender").value);
            query.equalTo("receiver", document.getElementById("receiveOld:receiver").value);
            
            query2.equalTo("receiver", document.getElementById("receiveOld:sender").value);
            query2.equalTo("sender", document.getElementById("receiveOld:receiver").value);
            
            //query.limit(5);
            //query.skip(fetched);
            //query.descending("createdAt");
            
            //query2.limit(5);
            //query2.skip(fetched);
            //query2.descending("createdAt");
            
            var mainQuery = Parse.Query.or(query, query2);
            
            mainQuery.descending("createdAt");
            mainQuery.limit(20);
            mainQuery.skip(fetched);
            
            mainQuery.find({
              success: function(results) {
                console.log("Successfully retrieved " + results.length + " messages.");
                // Do something with the returned Parse.Object values
                for (var i = 0; i < results.length; i++) {
                  var object = results[i];
                  console.log(object.get("sender") + ' - ' + object.get('message'));
                  if(object.get('sender') == document.getElementById("receiveOld:sender").value){
                      writeToScreenOld('<span style="color: green;">SENT: ' + object.get('message') + '</span>');
                  }else{
                      writeToScreenOld('<span style="color: blue;"> ' + object.get('message') + '</span>');
                  }
                  latestMessage = object.createdAt;
                  fetched++;
                }
                console.log("LATEST MESSAGE: " + latestMessage);
              },
              error: function(error) {
                alert("Error: " + error.code + " " + error.message);
              }
            });
          }
          function writeToScreenOld(message)
        {
            var pre = document.createElement("p");
            pre.style.wordWrap = "break-word";
            pre.innerHTML = message; oldoutput.appendChild(pre);
        }
            
            function fuckingAlert(){
                alert("Hello! I am an alert box!");
            }
            
            function Messages(from, to, message) {
                this.sender = sender;
                this.to = to;
                this.message = message;
            }
            

            $("#value").keypress(function(event) {
                if (event.which == 13) {
                    event.preventDefault();
                    doSend(document.getElementById('from').value,document.getElementById('to').value,document.getElementById('value').value);
                    document.getElementById("value").value = '';
                }
            });


              
             window.onload = function () {
                fetchOldMessages();
            }
            
            
              //]]>
            </script>
</html>

